name: Python Binding

on: [push, pull_request]

jobs:
  build:
    name: building on ${{ matrix.os }} (${{ matrix.arch }})
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: auto64
            os: ubuntu
          - arch: auto32
            os: ubuntu
          - arch: aarch64
            os: ubuntu
          - arch: auto
            os: macos
          - arch: arm64
            os: macos
          - arch: universal2
            os: macos
          - arch: auto64
            os: windows
            ls: dir
          - arch: auto32
            os: windows
            ls: dir

    runs-on: ${{ format('{0}-latest', matrix.os) }}
    steps:
    - uses: actions/checkout@v3

    - name: set up python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'

    - name: set up rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    - run: rustup target add aarch64-apple-darwin
      if: matrix.os == 'macos'

    - run: rustup toolchain install stable-i686-pc-windows-msvc
      if: matrix.os == 'windows'

    - run: rustup target add i686-pc-windows-msvc
      if: matrix.os == 'windows'

    - name: install python dependencies
      run: pip install -U setuptools wheel twine cibuildwheel

    - name: Set up QEMU
      if: matrix.os == 'ubuntu'
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: build ${{ matrix.os }} binaries
      run: cibuildwheel --output-dir wheelhouse
      env:
        # rust doesn't seem to be available for musl linux on i686
        CIBW_SKIP: 'cp36-* *-musllinux_i686'
        CIBW_ARCHS: ${{ matrix.arch }}
        CIBW_ENVIRONMENT: 'PATH="$HOME/.cargo/bin:$PATH"'
        CIBW_ENVIRONMENT_WINDOWS: 'PATH="$UserProfile\.cargo\bin;$PATH"'
        CIBW_BEFORE_BUILD: rustup show
        CIBW_BEFORE_BUILD_LINUX: >
          curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=stable --profile=minimal -y &&
          rustup show
        CIBW_TEST_COMMAND: 'pytest {project}/test'
        CIBW_TEST_REQUIRES: pytest
        CIBW_TEST_SKIP: '*-macosx_arm64 *-macosx_universal2:arm64'

    - run: ${{ matrix.ls || 'ls -lh' }} wheelhouse/

    - run: twine check wheelhouse/*

    - uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: wheelhouse
  
  build-sdist:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: set up python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'

    - name: build sdist
      run: |
        pip install -U setuptools-rust
        python setup.py sdist -d wheelhouse

    - uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: wheelhouse

  release:
    needs: [build, build-sdist]
    if: "success() && startsWith(github.ref, 'refs/tags/')"
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: set up python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'

    - run: pip install -U twine

    - name: get wheelhouse artifacts
      uses: actions/download-artifact@v2
      with:
        name: wheels
        path: wheelhouse

    - run: twine check wheelhouse/*

    - name: upload to pypi
      run: twine upload wheelhouse/*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.pypi_token }}
